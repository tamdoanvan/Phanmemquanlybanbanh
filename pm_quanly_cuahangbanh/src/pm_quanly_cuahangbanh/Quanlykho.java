/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pm_quanly_cuahangbanh;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lyhoa
 */
public class Quanlykho extends javax.swing.JFrame {

    /**
     * Creates new form Quanlykho
     */
    public Quanlykho() {
        initComponents();
        Tai_DS_Banh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_thembanhmoi1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_danhsachbanh = new javax.swing.JTable();
        btn_thembanhmoi = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_chinhsua = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_tenbanh = new javax.swing.JTextField();
        btn_tim = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_Tenbanh = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_mabanh = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        spinner_soluongconlai = new javax.swing.JSpinner();
        txt_giaban = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btn_luu = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        btn_trangchinh = new javax.swing.JButton();
        btn_quanlytaikhoan = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        btn_thembanhmoi1.setText("Thêm bánh mới");
        btn_thembanhmoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thembanhmoi1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Phần mềm quản lý bán hàng cửa hàng bánh ngọt");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 30)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-warehouse-50.png"))); // NOI18N
        jLabel5.setText("QUẢN LÝ KHO");
        jLabel5.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jLabel5InputMethodTextChanged(evt);
            }
        });

        tb_danhsachbanh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên bánh", "Mã", "Số lượng còn lại", "Giá tiền"
            }
        ));
        tb_danhsachbanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_danhsachbanhMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tb_danhsachbanh);
        if (tb_danhsachbanh.getColumnModel().getColumnCount() > 0) {
            tb_danhsachbanh.getColumnModel().getColumn(0).setMinWidth(250);
            tb_danhsachbanh.getColumnModel().getColumn(0).setPreferredWidth(250);
            tb_danhsachbanh.getColumnModel().getColumn(0).setMaxWidth(250);
            tb_danhsachbanh.getColumnModel().getColumn(1).setMinWidth(90);
            tb_danhsachbanh.getColumnModel().getColumn(1).setPreferredWidth(90);
            tb_danhsachbanh.getColumnModel().getColumn(1).setMaxWidth(90);
            tb_danhsachbanh.getColumnModel().getColumn(2).setMinWidth(110);
            tb_danhsachbanh.getColumnModel().getColumn(2).setPreferredWidth(110);
            tb_danhsachbanh.getColumnModel().getColumn(2).setMaxWidth(110);
        }

        btn_thembanhmoi.setBackground(java.awt.Color.lightGray);
        btn_thembanhmoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-add-list-24.png"))); // NOI18N
        btn_thembanhmoi.setText("Tạo bánh mới");
        btn_thembanhmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thembanhmoiActionPerformed(evt);
            }
        });

        btn_xoa.setBackground(java.awt.Color.lightGray);
        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-delete-bin-24.png"))); // NOI18N
        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });

        btn_chinhsua.setBackground(java.awt.Color.lightGray);
        btn_chinhsua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-edit-24.png"))); // NOI18N
        btn_chinhsua.setText("Chỉnh sửa");
        btn_chinhsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chinhsuaActionPerformed(evt);
            }
        });

        jLabel4.setText("Tìm bánh:");

        btn_tim.setBackground(java.awt.Color.lightGray);
        btn_tim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-search-26.png"))); // NOI18N
        btn_tim.setText("Tìm");
        btn_tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên bánh:");

        jLabel2.setText("Mã bánh:");

        txt_mabanh.setEnabled(false);

        jLabel3.setText("Số lượng còn lại:");

        jLabel7.setText("Giá bán:");

        btn_luu.setBackground(java.awt.Color.lightGray);
        btn_luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-check-all-24.png"))); // NOI18N
        btn_luu.setText("Thêm");
        btn_luu.setEnabled(false);
        btn_luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_luuActionPerformed(evt);
            }
        });

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        btn_trangchinh.setBackground(new java.awt.Color(255, 255, 255));
        btn_trangchinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-home-24.png"))); // NOI18N
        btn_trangchinh.setText("Trang chính");
        btn_trangchinh.setFocusable(false);
        btn_trangchinh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_trangchinh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_trangchinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trangchinhActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_trangchinh);

        btn_quanlytaikhoan.setBackground(new java.awt.Color(255, 255, 255));
        btn_quanlytaikhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pm_quanly_cuahangbanh/image/icons8-management-24.png"))); // NOI18N
        btn_quanlytaikhoan.setText("Quản lý tài khoản");
        btn_quanlytaikhoan.setFocusable(false);
        btn_quanlytaikhoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_quanlytaikhoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_quanlytaikhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quanlytaikhoanActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_quanlytaikhoan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_tenbanh, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_tim, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_Tenbanh, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_mabanh)
                            .addComponent(spinner_soluongconlai)
                            .addComponent(txt_giaban, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_chinhsua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btn_thembanhmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_luu, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_xoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Tenbanh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txt_mabanh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_luu, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_thembanhmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinner_soluongconlai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(btn_chinhsua, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(btn_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_giaban))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_tenbanh, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_tim, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public String ma() {
        String mabanh = "";
        int tongma = 0;
        int kt = 0;
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select mabanh from banh");
                while (kq.next()) {
                    mabanh = kq.getString(1);
                    int gt = Integer.parseInt(mabanh);
                    tongma++;
                }
            }
        } catch (Exception ex) {
        }
        /////////////////////////////////////////////////    
        int[] mang = new int[tongma];
        int i = 0;
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select mabanh from banh");
                while (kq.next()) {

                    mabanh = kq.getString(1);
                    int gt = Integer.parseInt(mabanh);
                    mang[i] = gt;
                    i++;
                }
            }

        } catch (Exception ex) {
        }
        /////////////////////////////////////////////////
        try {
            for (int s = 0; s <= mang.length; s++) {
                if (mang[s] != s) {
                    kt = s;
                    if (String.valueOf(kt).length() == 1) {
                        mabanh = "00" + kt;
                    } else if (String.valueOf(kt).length() == 2) {
                        mabanh = "0" + kt;
                    } else if (String.valueOf(kt).length() == 3) {
                        mabanh = String.valueOf(kt);
                    } else if (kt >= 999) {
                        JOptionPane.showMessageDialog(null, "Mã bánh đã đến 999 vui lòng xem lại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    }

                    txt_mabanh.setText(mabanh);
                    break;
                }
            }
        } catch (Exception e) {
            re_mabanh() ;
        }

        return mabanh;
    }

    public String re_mabanh() {
        String mabanh = "";
        int kt = 0;
        try {

            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select mabanh from banh");
                while (kq.next()) {
                    String tenbanh = kq.getString(1);
                    if (Integer.parseInt(tenbanh) > kt) {
                        kt = Integer.parseInt(tenbanh);
                    }
                }

            }
            kt = kt + 1;
            if (String.valueOf(kt).length() == 1) {
                mabanh = "00" + kt;
            } else if (String.valueOf(kt).length() == 2) {
                mabanh = "0" + kt;
            } else if (String.valueOf(kt).length() == 3) {
                mabanh = String.valueOf(kt);
            } else if (kt >= 999) {
                JOptionPane.showMessageDialog(null, "Mã bánh đã đến 999 vui lòng xem lại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }

            txt_mabanh.setText(mabanh);
        } catch (Exception ex) {
        }
        return mabanh;
    }

    public void Tai_DS_Banh() {
        DefaultTableModel DanhSachBanh = (DefaultTableModel) tb_danhsachbanh.getModel();
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select tenbanh, mabanh,soluongconlai,giaban from banh");
                while (kq.next()) {
                    String tenbanh = kq.getString(1);
                    String mabanh = kq.getString(2);
                    int soluongconlai = kq.getInt(3);
                    int giaban = kq.getInt(4);

                    DanhSachBanh.addRow(new Object[]{tenbanh, mabanh, soluongconlai, giaban});
                }

            }

        } catch (Exception ex) {
        }
    }

    public void data_banh() {
        int Row = tb_danhsachbanh.getSelectedRow();
        String mabanh = (String) tb_danhsachbanh.getValueAt(Row, 1);
        txt_mabanh.setText(mabanh);
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select tenbanh,soluongconlai,giaban from banh where mabanh = " + mabanh + "");
                while (kq.next()) {

                    txt_Tenbanh.setText(kq.getString(1));
                    spinner_soluongconlai.setValue(kq.getInt(2));
                    txt_giaban.setText(String.valueOf(kq.getInt(3)));

                }

            }

        } catch (Exception ex) {
        }
    }

    public boolean loi_kytu_mabanh(String chuoi) {
        boolean kt = false;
        if (chuoi.length() < 3 || chuoi.length() > 3) {
            kt = false;
            return kt;
        } else {
            kt = true;
            return kt;
        }
    }

    public boolean loi_kytu_tenbanh(String chuoi) {
        boolean kt = false;
        if (chuoi.length() > 100) {
            kt = false;
            return kt;
        } else {
            kt = true;
            return kt;
        }
    }

    public static boolean loi_kytu(String chuoi) {
        boolean kt = false;
        try {
            int a = Integer.parseInt(chuoi);
            kt = true;
            return kt;
        } catch (Exception e) {
            System.out.print(e);
            kt = false;
            return kt;
        }
    }

    public boolean loi_trungmabanh(String chuoi) {
        boolean kt = false;
        String mabanh = "";
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select mabanh from banh where mabanh = " + chuoi + "");
                while (kq.next()) {
                    mabanh = kq.getString(1);
                }

            }

        } catch (Exception ex) {
            System.out.print(ex.toString());
        }
        if (mabanh.equals("")) {
            kt = true;
            return kt;

        } else {
            kt = false;
            return kt;
        }
    }

    private void jLabel5InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jLabel5InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5InputMethodTextChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Quanlykho.this.setVisible(false);
        new Menu().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void tb_danhsachbanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_danhsachbanhMouseClicked
        // TODO add your handling code here:
        try {
            btn_luu.setEnabled(false);
            btn_thembanhmoi.setEnabled(true);
            data_banh();
        } catch (Exception e) {
        }

    }//GEN-LAST:event_tb_danhsachbanhMouseClicked

    private void btn_thembanhmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thembanhmoiActionPerformed
        // TODO add your handling code here:
        txt_Tenbanh.setText("");
        txt_mabanh.setText("");
        spinner_soluongconlai.setValue(0);
        txt_giaban.setText("");
         ma();
        //re_mabanh();
        DefaultTableModel danhsachbanh = (DefaultTableModel) tb_danhsachbanh.getModel();
        danhsachbanh.setRowCount(0);
        Tai_DS_Banh();
        btn_luu.setEnabled(true);
        btn_thembanhmoi.setEnabled(false);
    }//GEN-LAST:event_btn_thembanhmoiActionPerformed

    private void btn_thembanhmoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thembanhmoi1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btn_thembanhmoi1ActionPerformed

    private void btn_luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_luuActionPerformed
        // TODO add your handling code here:

        String tenbanh = txt_Tenbanh.getText();
        String mabanh = txt_mabanh.getText();
        int soluongconlai = (int) spinner_soluongconlai.getValue();

        String giaban1 = txt_giaban.getText();

        if (tenbanh.equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập tên bánh!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (loi_kytu_tenbanh(tenbanh) == false) {
            JOptionPane.showMessageDialog(null, "Số lượng ký tự của tên bánh phải ít hơn 100 ký tự!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (mabanh.equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập mã bánh!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (loi_kytu_mabanh(mabanh) == false || loi_kytu(mabanh) == false) {
            JOptionPane.showMessageDialog(null, "Số lượng ký tự của mã bánh phải bằng 3 ký tự và sử dụng kiểu số!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (loi_trungmabanh(mabanh) == false) {
            JOptionPane.showMessageDialog(null, "Mã bánh đã có sẵn trong kho!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (soluongconlai <= 0) {
            JOptionPane.showMessageDialog(null, "Số lượng bánh phải lớn hơn 0!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (giaban1.equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập giá bán!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else if (loi_kytu(giaban1) == false) {
            JOptionPane.showMessageDialog(null, "Giá bán phải nhập kiểu số!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else {
            float giaban2 = Float.parseFloat(txt_giaban.getText());

            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();

                if (JOptionPane.showConfirmDialog(this, "Tạo thêm bánh mới?", "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    if (conn != null) {
                        Statement dd = conn.createStatement();
                        dd.executeUpdate("insert into banh (tenbanh,mabanh,soluongconlai,giaban) values ( N'" + tenbanh + "',N'" + mabanh + "'," + soluongconlai + "," + giaban2 + "  )   ");
                        JOptionPane.showMessageDialog(null, "Thêm bánh mới thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        DefaultTableModel danhsachbanh = (DefaultTableModel) tb_danhsachbanh.getModel();
                        danhsachbanh.setRowCount(0);
                        txt_Tenbanh.setText("");
                        txt_mabanh.setText("");
                        spinner_soluongconlai.setValue(0);
                        txt_giaban.setText("");
                        Tai_DS_Banh();
                        btn_luu.setEnabled(false);
                        btn_thembanhmoi.setEnabled(true);
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Thêm bánh mới không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btn_luuActionPerformed

    private void btn_chinhsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chinhsuaActionPerformed
        // TODO add your handling code here:
        try {
            int Row = tb_danhsachbanh.getSelectedRow();
            String mabanh1 = (String) tb_danhsachbanh.getValueAt(Row, 1);
            if (Row < 0) {
                JOptionPane.showMessageDialog(null, "Chưa chọn bánh trong danh sách!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            } else {
                String tenbanh = txt_Tenbanh.getText();
                String mabanh = txt_mabanh.getText();
                int soluongconlai = (int) spinner_soluongconlai.getValue();
                String giaban1 = txt_giaban.getText();

                if (tenbanh.equals("")) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập tên bánh!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (loi_kytu_tenbanh(tenbanh) == false) {
                    JOptionPane.showMessageDialog(null, "Số lượng ký tự của tên bánh phải ít hơn 100 ký tự!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (mabanh.equals("")) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập mã bánh!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (loi_kytu_mabanh(mabanh) == false || loi_kytu(mabanh) == false) {
                    JOptionPane.showMessageDialog(null, "Số lượng ký tự của mã bánh phải bằng 3 ký tự và sử dụng kiểu số!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (soluongconlai <= 0) {
                    JOptionPane.showMessageDialog(null, "Số lượng bánh phải lớn hơn 0!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (giaban1.equals("")) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập giá bán!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else if (loi_kytu(giaban1) == false) {
                    JOptionPane.showMessageDialog(null, "Giá bán phải nhập kiểu số!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                } else {
                    float giaban2 = Float.parseFloat(txt_giaban.getText());
                    try {
                        Connect a = new Connect();
                        Connection conn = a.getConnection();

                        if (JOptionPane.showConfirmDialog(this, "Chỉnh sửa thông tin bánh?", "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                            if (conn != null) {
                                Statement dd = conn.createStatement();
                                dd.executeUpdate("Update banh set tenbanh = N'" + tenbanh + "',mabanh = '" + mabanh + "',soluongconlai = " + soluongconlai + ", giaban = " + giaban2 + " where mabanh = '" + mabanh1 + "'     ");
                                JOptionPane.showMessageDialog(null, "Chỉnh sửa thông tin bánh thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                                DefaultTableModel danhsachbanh = (DefaultTableModel) tb_danhsachbanh.getModel();
                                danhsachbanh.setRowCount(0);
                                Tai_DS_Banh();
                            }
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Thêm bánh mới không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Chưa chọn bánh trong danh sách!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_chinhsuaActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        // TODO add your handling code here:
        try {
            int Row = tb_danhsachbanh.getSelectedRow();
            String mabanh = (String) tb_danhsachbanh.getValueAt(Row, 1);

            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();
                if (JOptionPane.showConfirmDialog(this, "Xóa bánh khỏi danh sách?", "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    if (conn != null) {
                        Statement dd = conn.createStatement();
                        dd.executeUpdate("Delete banh where mabanh = N'" + mabanh + "'     ");
                        JOptionPane.showMessageDialog(null, "Xóa thông tin bánh thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        DefaultTableModel danhsachbanh = (DefaultTableModel) tb_danhsachbanh.getModel();
                        danhsachbanh.setRowCount(0);
                        txt_Tenbanh.setText("");
                        txt_mabanh.setText("");
                        spinner_soluongconlai.setValue(0);
                        txt_giaban.setText("");
                        Tai_DS_Banh();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Xóa không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Chưa chọn bánh trong danh sách!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_timActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbn = (DefaultTableModel) tb_danhsachbanh.getModel();
        String getTen = txt_tenbanh.getText();
        tbn.setRowCount(0);
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            Statement dd = conn.createStatement();
            ResultSet rs = dd.executeQuery("select tenbanh,mabanh,soluongconlai,giaban from banh where tenbanh like N'%" + getTen + "%' or mabanh like '%" + getTen + "%'");

            while (rs.next()) {
                String tenbanh = rs.getString(1);
                String mabanh = rs.getString(2);
                String soluongconlai = String.valueOf(rs.getInt(3));
                int giaban = rs.getInt(4);

                tbn.addRow(new Object[]{tenbanh, mabanh, soluongconlai, giaban});
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_timActionPerformed

    private void btn_trangchinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trangchinhActionPerformed
        // TODO add your handling code here:
        Quanlykho.this.setVisible(false);
        new Menu().setVisible(true);
    }//GEN-LAST:event_btn_trangchinhActionPerformed

    public void loi_chucvu1() {
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            if (conn != null) {
                Statement dd = conn.createStatement();
                ResultSet kq = dd.executeQuery("Select chucvu,tinhtrang from taikhoan where idnhanvien = '" + DangNhap.ID + "' ");
                while (kq.next()) {
                    String chucvu = kq.getString(1);
                    String tinhtrang = kq.getString(2);

                    if (chucvu.equals("Quản lý") && tinhtrang.trim().equals("Active")) {
                        Quanlykho.this.setVisible(false);
                        new Quanlytaikhoan().setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Phải đăng nhập bằng tài khoản quản lý!", "Thông báo", JOptionPane.ERROR_MESSAGE);

                    }
                }
            }
        } catch (Exception ex) {
            System.out.print(ex.toString());
        }
    }
    private void btn_quanlytaikhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quanlytaikhoanActionPerformed
        // TODO add your handling code here:
        loi_chucvu1();
    }//GEN-LAST:event_btn_quanlytaikhoanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quanlykho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quanlykho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quanlykho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quanlykho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quanlykho().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_chinhsua;
    private javax.swing.JButton btn_luu;
    private javax.swing.JButton btn_quanlytaikhoan;
    private javax.swing.JButton btn_thembanhmoi;
    private javax.swing.JButton btn_thembanhmoi1;
    private javax.swing.JButton btn_tim;
    private javax.swing.JButton btn_trangchinh;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JSpinner spinner_soluongconlai;
    private javax.swing.JTable tb_danhsachbanh;
    private javax.swing.JTextField txt_Tenbanh;
    private javax.swing.JTextField txt_giaban;
    private javax.swing.JTextField txt_mabanh;
    private javax.swing.JTextField txt_tenbanh;
    // End of variables declaration//GEN-END:variables

}
